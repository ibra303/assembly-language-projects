.MODEL LARGE 
.STACK 100H
.CODE
H DT ?
fd1 DT ?
fd2 DT ?
h1 DQ 104576.0
TWO DQ 2.0
.386
.387 
; THIS FUNCTION TAKES THE H AND X AND CALCULATE THE PARTIAL DERIVATE 
_single_partial_derivative PROC FAR
MOV AX,0
FLD QWORD PTR FS:[SI]  ; 
FLD QWORD PTR FS:[SI]
FADD ST(0),ST(2)
FSTP QWORD PTR FS:[SI]
PUSH FS
PUSH DI
CALL DWORD PTR [BP+6]
POP DI
POP FS
FSTP CS:fd2
FLD ST(0)
FSUB ST(0),ST(2)
FSTP QWORD PTR FS:[SI]
PUSH FS
PUSH DI
CALL DWORD PTR [BP+6]
POP DI
POP FS
FLD CS:fd2
FXCH ST(1)
FSUBP ST(1),ST(0)
FSTP fd2
FSTP QWORD PTR FS:[SI]
FMUL CS:TWO
FLD CS:fd2
FDIV ST(0),ST(1)
FSTP CS:fd2
FDIV CS:TWO
RET
;;
_single_partial_derivative ENDP
PUBLIC _approx_partial_derivative
_approx_partial_derivative PROC FAR
PUSH BP
MOV BP,SP
MOV AX,0
PUSH DX
PUSH DI
PUSH FS
PUSH SI
PUSH GS
MOV DX,[BP+10]  ; DX = INDEX
MOV BX,[BP+6]  ; BX = FUNCTION F OFFSET
MOV DI,[BP+12] ; DI = X ARRAY OFFSET
MOV FS,[BP+14] ; FS = X ARRAY SEGMENT
MOV SI,[BP+12] ; SI = X ARRAY OFFSET
MOV GS,[BP+8]  ; GS = FUNCTION F SEGMENT
; TAKE THE REQUIRED X FROM X ARRAY ACCORDIN TO THE INDEX I
MOV AX,8  
MUL DX
ADD SI,AX
;;
; CALCULATE H
FLD QWORD PTR FS:[SI]
FLD CS:h1
FDIVP ST(1),ST(0)
FABS
;;
CALL _single_partial_derivative
; THIS LOOP CALCULATE A =|FD1-FD2| AND B =|FD1/104576| AND COMPARE IF B>A END LOOP AND RETURN FD2, IF NOT, COMPLETE THE LOOP 
BODY:
FLD CS:fd2
FSTP CS:fd1
FDIV CS:TWO
CALL _single_partial_derivative
FLD CS:fd1
FLD CS:fd2
FSUBP ST(1),ST(0)
FABS
FLD CS:fd1
FDIV CS:h1
FABS
FCOM ST(1)
FSTSW AX
SAHF 
JA FINISH
FSTP
FSTP
JMP BODY
;;
FINISH:
FSTP
FSTP
FSTP H
FLD fd2
POP GS
POP SI
POP FS
POP DI
POP DX
POP BP
RET
_approx_partial_derivative ENDP
END1:
END