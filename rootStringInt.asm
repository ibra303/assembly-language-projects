.MODEL SMALL
.STACK 100H
.DATA
ENTERSTRING DB 13,10,'Enter number N for sqrt(up to 12 digits)',13,10,'$'
SQRT DB 'Sqrt(','$'
SQRT2 DB ') = ','$'
ENTER2 DB 13,10,'$'
SOURCE DB '00000000000000','$'
REM DD 0
y DD ?
x DD ?
P DD 0
c DD ?
m DD ?
RESULT DB '00000000000000','$'
B DD ?
sPOS DW 0
rPOS DW 0
TWO DD 2
TEN DD 10
TWENTY DD 20
ONEHUNDRED DD 100
K DW 0
.CODE 
.386
MOV AX,@DATA
MOV DS,AX
MOV AX,0
MOV AH,9
MOV DX,OFFSET ENTERSTRING
INT 21H
MOV SI,0
;; loop for taking a number from user 
MOV CX,12
BODY:
MOV AH,1
INT 21H
MOV AH,0
SUB AL,'0'
CMP AL,0DDH
JNE COMPLETE
JMP FINISH
COMPLETE:
ADD AL,'0'
MOV SOURCE[SI],AL
INC SI
INC K
LOOP BODY
;; if the user done with entering numbers
FINISH:
MOV AX,K
CMP AX,12
JE ENTER1
JMP NEXT3
ENTER1:
MOV AH,9
MOV DX,OFFSET ENTER2
INT 21H
MOV AX,0
;; enter the number to the the sqrt string to print
NEXT3:
MOV AX,0
MOV AH,9
MOV DX,OFFSET SQRT
INT 21H
MOV SI,K
DEC SI
MOV AX,K
MOV DI,0
MOV CX,K
;; loop to PRINT the number 
BODY3:
MOV AL,SOURCE[DI]
MOV AH,2
MOV DL,AL
INT 21H
INC DI
LOOP BODY3
MOV AH,9
MOV DX,OFFSET SQRT2
INT 21H
MOV AH,0
MOV AX,K
MOV CX,K
MOV DX,0
DIV TWO
CMP DX,0
JNE ADD0
JMP NEXT
;; if the status of the number was individually -> add 0 to the number from left 
ADD0:
MOV AL,SOURCE[SI]
MOV SOURCE[SI+1],AL
DEC SI
LOOP ADD0
MOV AL,0
ADD AL,'0'
MOV SOURCE[0],AL
;;add ascii of null to the finish of the string ('@')
MOV SI,K
ADC SI,2
MOV AL,'@'
DEC SI
MOV SOURCE[SI],AL
JMP NEXT1
NEXT:
INC SI
MOV AL,'@'
MOV SOURCE[SI],AL
;;calculate the sqrt of the number(using the algorthim that came with the program)
NEXT1:
MOV SI,sPOS
MOV DI,rPOS
MOV AL,SOURCE[SI]
CMP AL,'@'
JNE COMPLETE1
JMP FINISH1
COMPLETE1:
MOV AL,SOURCE[SI]
SUB AL,'0'
MUL TEN
MOV m,EAX
MOV AL,SOURCE[SI+1]
SUB AL,'0'
ADD m,EAX
MOV EAX,REM
MUL ONEHUNDRED
ADD EAX,m
MOV c,EAX
MOV EAX,0
MOV x,EAX
MOV y,EAX
MOV ECX,0
WHILE_YC:
MOV EAX,C
CMP EAX,y
JA COMPLETE2
JMP FINISH2
COMPLETE2:
INC x
MOV EAX,P
MUL TWENTY
ADD EAX,x
MUL x
MOV y,EAX
LOOP WHILE_YC
FINISH2:
MOV EAX,y
CMP EAX,c
JA CHANGE
JMP NEXT2
CHANGE:
DEC x
MOV EAX,p
MUL TWENTY
ADD EAX,x
MUL x
MOV y,EAX
NEXT2:
MOV EAX,x
ADD AL,'0'
MOV RESULT[DI],AL
MOV BX,2
ADC sPOS,BX
INC rPOS
MOV EAX,c
SBB EAX,y
MOV REM,EAX
MOV EAX,P
MUL TEN
ADD EAX,x
MOV p,EAX
MOV EAX,0
JMP NEXT1
;;print the sqrt of the number 
FINISH1:
MOV SI,0
MOV CX,DI
PRINT:
MOV AL,RESULT[SI]
MOV AH,2
MOV DL,AL
INT 21H
INC SI
LOOP PRINT
MOV AH,4CH
INT 21H
END